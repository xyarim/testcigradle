# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      -
        name: Check CMake Version
        run: cmake --version    
      -
        name: Install CMake
        run: |
            sudo apt-get update
            sudo apt-get install -y cmake
      -
        name: Check CMake Version
        run: |
            cmake --version
            which cmake
            ls /usr/local/bin/cmake
            ls -la /usr/local/bin/
            /usr/local/bin/cmake --version
            ls
       -
        name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      -
        name: Check CMake Version
        run: cmake --version
      -
        name: Set up CMake directory in local.properties
        run: echo "cmake.dir=/usr/local/bin/cmake" >> ./local.properties
      -
        name: Build
        uses: gradle/gradle-build-action@v3
        with:
          cache-disabled: true
          arguments: assembleDebug --no-daemon --info --stacktrace
      -
            

      
